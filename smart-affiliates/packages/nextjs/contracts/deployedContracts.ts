/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    AffiliateContract: {
      address: "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      abi: [
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "agreementId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "merchant",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "promoter",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "link",
              type: "string",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "payPerClick",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "createdAt",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "endAt",
              type: "uint256",
            },
          ],
          name: "AgreementCreated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "agreementId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "promoter",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amountGenerated",
              type: "uint256",
            },
          ],
          name: "ClickRegistered",
          type: "event",
        },
        {
          inputs: [],
          name: "agreementCount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "agreements",
          outputs: [
            {
              internalType: "address",
              name: "merchant",
              type: "address",
            },
            {
              internalType: "address",
              name: "promoter",
              type: "address",
            },
            {
              internalType: "string",
              name: "link",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "payPerClick",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "totalAmountGenerated",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "createdAt",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "endAt",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "isActive",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_promoter",
              type: "address",
            },
            {
              internalType: "string",
              name: "_link",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "_payPerClick",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_endAt",
              type: "uint256",
            },
          ],
          name: "createAgreement",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_agreementId",
              type: "uint256",
            },
          ],
          name: "registerClick",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    PaymentHandler: {
      address: "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
      abi: [
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "agreementId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "merchant",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "promoter",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amountPaid",
              type: "uint256",
            },
          ],
          name: "PaymentMade",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "agreements",
          outputs: [
            {
              internalType: "address",
              name: "merchant",
              type: "address",
            },
            {
              internalType: "address",
              name: "promoter",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "totalAmountGenerated",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "isActive",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_agreementId",
              type: "uint256",
            },
          ],
          name: "makePayment",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_agreementId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
          ],
          name: "recordPayment",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    UserManagement: {
      address: "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      abi: [
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "userAddress",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "role",
              type: "string",
            },
          ],
          name: "UserOnboarded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "userAddress",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "role",
              type: "string",
            },
            {
              indexed: false,
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              indexed: false,
              internalType: "string",
              name: "username",
              type: "string",
            },
            {
              indexed: false,
              internalType: "string",
              name: "email",
              type: "string",
            },
          ],
          name: "UserRegistered",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
          ],
          name: "getUser",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "userAddress",
                  type: "address",
                },
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "username",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "email",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "passwordHash",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "role",
                  type: "string",
                },
                {
                  internalType: "bool",
                  name: "onboarded",
                  type: "bool",
                },
                {
                  components: [
                    {
                      internalType: "string",
                      name: "tikTokLink",
                      type: "string",
                    },
                    {
                      internalType: "uint256",
                      name: "tikTokFollowers",
                      type: "uint256",
                    },
                    {
                      internalType: "string",
                      name: "facebookLink",
                      type: "string",
                    },
                    {
                      internalType: "uint256",
                      name: "facebookFollowers",
                      type: "uint256",
                    },
                    {
                      internalType: "string",
                      name: "instagramLink",
                      type: "string",
                    },
                    {
                      internalType: "uint256",
                      name: "instagramFollowers",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct UserManagement.SocialMedia",
                  name: "socialMedia",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "string",
                      name: "companyName",
                      type: "string",
                    },
                    {
                      internalType: "string",
                      name: "websiteLink",
                      type: "string",
                    },
                  ],
                  internalType: "struct UserManagement.Company",
                  name: "company",
                  type: "tuple",
                },
              ],
              internalType: "struct UserManagement.User",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_role",
              type: "string",
            },
            {
              components: [
                {
                  internalType: "string",
                  name: "tikTokLink",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "tikTokFollowers",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "facebookLink",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "facebookFollowers",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "instagramLink",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "instagramFollowers",
                  type: "uint256",
                },
              ],
              internalType: "struct UserManagement.SocialMedia",
              name: "_socialMedia",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "string",
                  name: "companyName",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "websiteLink",
                  type: "string",
                },
              ],
              internalType: "struct UserManagement.Company",
              name: "_company",
              type: "tuple",
            },
          ],
          name: "onboardUser",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_name",
              type: "string",
            },
            {
              internalType: "string",
              name: "_username",
              type: "string",
            },
            {
              internalType: "string",
              name: "_email",
              type: "string",
            },
            {
              internalType: "string",
              name: "_passwordHash",
              type: "string",
            },
          ],
          name: "registerUser",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "userCount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "users",
          outputs: [
            {
              internalType: "address",
              name: "userAddress",
              type: "address",
            },
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "username",
              type: "string",
            },
            {
              internalType: "string",
              name: "email",
              type: "string",
            },
            {
              internalType: "string",
              name: "passwordHash",
              type: "string",
            },
            {
              internalType: "string",
              name: "role",
              type: "string",
            },
            {
              internalType: "bool",
              name: "onboarded",
              type: "bool",
            },
            {
              components: [
                {
                  internalType: "string",
                  name: "tikTokLink",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "tikTokFollowers",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "facebookLink",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "facebookFollowers",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "instagramLink",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "instagramFollowers",
                  type: "uint256",
                },
              ],
              internalType: "struct UserManagement.SocialMedia",
              name: "socialMedia",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "string",
                  name: "companyName",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "websiteLink",
                  type: "string",
                },
              ],
              internalType: "struct UserManagement.Company",
              name: "company",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
